USE [3SCRM]
GO
/****** Object:  User [3sgroupdb]    Script Date: 22-Sep-21 11:26:54 AM ******/
CREATE USER [3sgroupdb] FOR LOGIN [3sgroupdb] WITH DEFAULT_SCHEMA=[3sgroupdb]
GO
/****** Object:  DatabaseRole [gd_execprocs]    Script Date: 22-Sep-21 11:26:57 AM ******/
CREATE ROLE [gd_execprocs]
GO
ALTER ROLE [db_securityadmin] ADD MEMBER [3sgroupdb]
GO
ALTER ROLE [db_ddladmin] ADD MEMBER [3sgroupdb]
GO
ALTER ROLE [db_backupoperator] ADD MEMBER [3sgroupdb]
GO
ALTER ROLE [db_datareader] ADD MEMBER [3sgroupdb]
GO
ALTER ROLE [db_datawriter] ADD MEMBER [3sgroupdb]
GO
/****** Object:  Schema [3sgroupdb]    Script Date: 22-Sep-21 11:26:57 AM ******/
CREATE SCHEMA [3sgroupdb]
GO
/****** Object:  Table [dbo].[COMPANY]    Script Date: 22-Sep-21 11:26:57 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[COMPANY](
	[PK_COMPANYID] [bigint] IDENTITY(1,1) NOT NULL,
	[COMP_NAME] [nvarchar](200) NOT NULL,
	[COMP_ADDRESS] [nvarchar](500) NULL,
	[COMP_PHONE] [nvarchar](50) NULL,
	[COMP_TRADE_LICENSE_EXP] [datetime] NULL,
	[COMP_IMMIGRATION_EXP] [datetime] NULL,
	[COMP_IMPORT_CODE_EXP] [datetime] NULL,
	[COMP_INSURANCE_EXP] [datetime] NULL,
	[NOTES] [nvarchar](max) NULL,
	[IS_ACTIVE] [bit] NULL,
	[IS_DELETED] [bit] NULL,
	[FK_CREATED_BY] [bigint] NOT NULL,
	[FK_MODIFIED_BY] [bigint] NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[MODIFIED_DATE] [datetime] NOT NULL,
	[COMP_EMAIL] [nvarchar](200) NULL,
	[COMP_CONTACT_PERSON] [nvarchar](200) NULL,
	[COMP_CP_PHONE] [nvarchar](50) NULL,
 CONSTRAINT [PK_COMPANY] PRIMARY KEY CLUSTERED 
(
	[PK_COMPANYID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DB_Errors]    Script Date: 22-Sep-21 11:26:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DB_Errors](
	[ErrorID] [int] IDENTITY(1,1) NOT NULL,
	[UserName] [varchar](100) NULL,
	[ErrorNumber] [int] NULL,
	[ErrorState] [int] NULL,
	[ErrorSeverity] [int] NULL,
	[ErrorLine] [int] NULL,
	[ErrorProcedure] [varchar](max) NULL,
	[ErrorMessage] [varchar](max) NULL,
	[ErrorDateTime] [datetime] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[EMPLOYEE]    Script Date: 22-Sep-21 11:26:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[EMPLOYEE](
	[PK_EMPLOYEEID] [bigint] IDENTITY(1,1) NOT NULL,
	[FK_COMPANYID] [bigint] NOT NULL,
	[EMP_NAME] [nvarchar](100) NULL,
	[EMP_MOBILE] [nvarchar](50) NULL,
	[EMP_PASSPORT_EXP] [datetime] NULL,
	[EMP_INSURANCE_EXP] [datetime] NULL,
	[EMP_VISA_EXP] [datetime] NULL,
	[EMP_LABOR_CARD_EXP] [datetime] NULL,
	[NOTES] [nvarchar](max) NULL,
	[IS_ACTIVE] [bit] NULL,
	[IS_DELETED] [bit] NULL,
	[FK_CREATED_BY] [bigint] NOT NULL,
	[FK_MODIFIED_BY] [bigint] NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[MODIFIED_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_EMPLOYEE] PRIMARY KEY CLUSTERED 
(
	[PK_EMPLOYEEID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PARTNER]    Script Date: 22-Sep-21 11:26:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PARTNER](
	[PK_PARTNERID] [bigint] IDENTITY(1,1) NOT NULL,
	[FK_COMPANYID] [bigint] NOT NULL,
	[PAR_NAME] [nvarchar](100) NOT NULL,
	[PAR_MOBILE] [nvarchar](50) NULL,
	[PAR_PASSPORT_EXP] [datetime] NULL,
	[PAR_INSURANCE_EXP] [datetime] NULL,
	[PAR_VISA_EXP] [datetime] NULL,
	[NOTES] [nvarchar](max) NULL,
	[IS_ACTIVE] [bit] NULL,
	[IS_DELETED] [bit] NULL,
	[FK_CREATED_BY] [bigint] NOT NULL,
	[FK_MODIFIED_BY] [bigint] NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[MODIFIED_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_PARTNER] PRIMARY KEY CLUSTERED 
(
	[PK_PARTNERID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PARTNER_FAMILY]    Script Date: 22-Sep-21 11:26:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PARTNER_FAMILY](
	[PK_FAMILYID] [bigint] IDENTITY(1,1) NOT NULL,
	[FK_PARTNERID] [bigint] NOT NULL,
	[FML_NAME] [nvarchar](100) NOT NULL,
	[FML_RELATION] [nvarchar](50) NULL,
	[FML_PASSPORT_EXP] [datetime] NULL,
	[FML_INSURANCE_EXP] [datetime] NULL,
	[FML_VISA_EXP] [datetime] NULL,
	[NOTES] [nvarchar](max) NULL,
	[IS_ACTIVE] [bit] NULL,
	[IS_DELETED] [bit] NULL,
	[FK_CREATED_BY] [bigint] NOT NULL,
	[FK_MODIFIED_BY] [bigint] NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[MODIFIED_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_PARTNER_FAMILY] PRIMARY KEY CLUSTERED 
(
	[PK_FAMILYID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PARTNER_MISC]    Script Date: 22-Sep-21 11:26:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PARTNER_MISC](
	[PK_MISCID] [bigint] IDENTITY(1,1) NOT NULL,
	[MISC_NAME] [nvarchar](100) NOT NULL,
	[MISC_EXP_DATE] [datetime] NULL,
	[NOTES] [nvarchar](max) NULL,
	[IS_ACTIVE] [bit] NULL,
	[IS_DELETED] [bit] NULL,
	[FK_CREATED_BY] [bigint] NOT NULL,
	[FK_MODIFIED_BY] [bigint] NOT NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[MODIFIED_DATE] [datetime] NOT NULL,
	[FK_COMPANYID] [bigint] NOT NULL,
 CONSTRAINT [PK_PARTNER_MISC] PRIMARY KEY CLUSTERED 
(
	[PK_MISCID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[USERS]    Script Date: 22-Sep-21 11:26:58 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[USERS](
	[PK_USERID] [bigint] IDENTITY(1,1) NOT NULL,
	[USERNAME] [nvarchar](50) NOT NULL,
	[PASSWORD] [nvarchar](max) NOT NULL,
	[NAME] [nvarchar](100) NOT NULL,
	[MOBILE_NO] [nvarchar](50) NOT NULL,
	[NOTES] [nvarchar](max) NULL,
	[IS_ACTIVE] [bit] NULL,
	[IS_DELETED] [bit] NULL,
	[FK_CREATED_BY] [bigint] NULL,
	[FK_MODIFIED_BY] [bigint] NULL,
	[CREATED_DATE] [datetime] NOT NULL,
	[MODIFIED_DATE] [datetime] NOT NULL,
 CONSTRAINT [PK_USERS] PRIMARY KEY CLUSTERED 
(
	[PK_USERID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
SET IDENTITY_INSERT [dbo].[COMPANY] ON 
GO
INSERT [dbo].[COMPANY] ([PK_COMPANYID], [COMP_NAME], [COMP_ADDRESS], [COMP_PHONE], [COMP_TRADE_LICENSE_EXP], [COMP_IMMIGRATION_EXP], [COMP_IMPORT_CODE_EXP], [COMP_INSURANCE_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [COMP_EMAIL], [COMP_CONTACT_PERSON], [COMP_CP_PHONE]) VALUES (13, N'999 RENT A CAR L.L.C', N'', N'0000000000', CAST(N'2018-04-20T00:00:00.000' AS DateTime), NULL, NULL, NULL, N'', 1, 0, 3, 3, CAST(N'2021-09-19T06:20:11.453' AS DateTime), CAST(N'2021-09-19T06:20:11.453' AS DateTime), N'999rent@gmail.com', N'HR', N'')
GO
INSERT [dbo].[COMPANY] ([PK_COMPANYID], [COMP_NAME], [COMP_ADDRESS], [COMP_PHONE], [COMP_TRADE_LICENSE_EXP], [COMP_IMMIGRATION_EXP], [COMP_IMPORT_CODE_EXP], [COMP_INSURANCE_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [COMP_EMAIL], [COMP_CONTACT_PERSON], [COMP_CP_PHONE]) VALUES (14, N'3S Middle East Services LLC', N'Sheikh Rashid Tower
World Trade Center', N'04 395 5747', CAST(N'2022-07-10T00:00:00.000' AS DateTime), CAST(N'2021-11-04T00:00:00.000' AS DateTime), NULL, CAST(N'2022-12-01T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T06:48:02.607' AS DateTime), CAST(N'2021-09-19T23:31:47.080' AS DateTime), N'info@3smiddleeast.com', N'Indira', N'04 395 5747')
GO
INSERT [dbo].[COMPANY] ([PK_COMPANYID], [COMP_NAME], [COMP_ADDRESS], [COMP_PHONE], [COMP_TRADE_LICENSE_EXP], [COMP_IMMIGRATION_EXP], [COMP_IMPORT_CODE_EXP], [COMP_INSURANCE_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [COMP_EMAIL], [COMP_CONTACT_PERSON], [COMP_CP_PHONE]) VALUES (15, N'3S Biz City Business Center ', N'1402 1403 City Tower II
Sheikh Zayed Road', N'043982100', CAST(N'2021-10-24T00:00:00.000' AS DateTime), CAST(N'2021-11-04T00:00:00.000' AS DateTime), NULL, CAST(N'2022-06-30T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T06:49:47.513' AS DateTime), CAST(N'2021-09-19T06:49:47.513' AS DateTime), N'admin@bizcitydubai.com', N'Dana', N'043982100')
GO
SET IDENTITY_INSERT [dbo].[COMPANY] OFF
GO
SET IDENTITY_INSERT [dbo].[EMPLOYEE] ON 
GO
INSERT [dbo].[EMPLOYEE] ([PK_EMPLOYEEID], [FK_COMPANYID], [EMP_NAME], [EMP_MOBILE], [EMP_PASSPORT_EXP], [EMP_INSURANCE_EXP], [EMP_VISA_EXP], [EMP_LABOR_CARD_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (1, 13, N'SONIA PARAS ', N'0000000000', NULL, NULL, NULL, CAST(N'1989-08-17T00:00:00.000' AS DateTime), N'SONIA PARAS  notes', 1, 0, 3, 3, CAST(N'2021-09-19T06:21:41.470' AS DateTime), CAST(N'2021-09-19T06:30:08.257' AS DateTime))
GO
INSERT [dbo].[EMPLOYEE] ([PK_EMPLOYEEID], [FK_COMPANYID], [EMP_NAME], [EMP_MOBILE], [EMP_PASSPORT_EXP], [EMP_INSURANCE_EXP], [EMP_VISA_EXP], [EMP_LABOR_CARD_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (2, 13, N'MUHAMMED FAROOQ', N'00000000000', NULL, NULL, NULL, CAST(N'2021-07-01T00:00:00.000' AS DateTime), N'MUHAMMED FAROOQ
 ', 1, 0, 3, 3, CAST(N'2021-09-19T06:30:45.147' AS DateTime), CAST(N'2021-09-19T06:30:45.147' AS DateTime))
GO
INSERT [dbo].[EMPLOYEE] ([PK_EMPLOYEEID], [FK_COMPANYID], [EMP_NAME], [EMP_MOBILE], [EMP_PASSPORT_EXP], [EMP_INSURANCE_EXP], [EMP_VISA_EXP], [EMP_LABOR_CARD_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (3, 13, N'PUNAM BISHWAKARMA ', N'0000000000', NULL, NULL, NULL, CAST(N'2023-01-24T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T06:32:04.353' AS DateTime), CAST(N'2021-09-19T06:32:04.353' AS DateTime))
GO
INSERT [dbo].[EMPLOYEE] ([PK_EMPLOYEEID], [FK_COMPANYID], [EMP_NAME], [EMP_MOBILE], [EMP_PASSPORT_EXP], [EMP_INSURANCE_EXP], [EMP_VISA_EXP], [EMP_LABOR_CARD_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (4, 15, N'Dana Fayzrakhmanova', N'0527167166', CAST(N'2031-02-17T00:00:00.000' AS DateTime), CAST(N'2022-02-17T00:00:00.000' AS DateTime), CAST(N'2023-01-06T00:00:00.000' AS DateTime), CAST(N'2023-05-09T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T06:58:00.020' AS DateTime), CAST(N'2021-09-19T23:09:00.757' AS DateTime))
GO
INSERT [dbo].[EMPLOYEE] ([PK_EMPLOYEEID], [FK_COMPANYID], [EMP_NAME], [EMP_MOBILE], [EMP_PASSPORT_EXP], [EMP_INSURANCE_EXP], [EMP_VISA_EXP], [EMP_LABOR_CARD_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (5, 14, N'Indira Ibasco', N'0527167166', CAST(N'2030-07-15T00:00:00.000' AS DateTime), CAST(N'2023-05-17T00:00:00.000' AS DateTime), CAST(N'2022-02-17T00:00:00.000' AS DateTime), CAST(N'2023-05-09T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-20T23:59:01.040' AS DateTime), CAST(N'2021-09-20T23:59:01.040' AS DateTime))
GO
INSERT [dbo].[EMPLOYEE] ([PK_EMPLOYEEID], [FK_COMPANYID], [EMP_NAME], [EMP_MOBILE], [EMP_PASSPORT_EXP], [EMP_INSURANCE_EXP], [EMP_VISA_EXP], [EMP_LABOR_CARD_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (6, 14, N'Vrutti Patel ', N'0505172184', CAST(N'2022-02-08T00:00:00.000' AS DateTime), CAST(N'2022-02-17T00:00:00.000' AS DateTime), CAST(N'2022-07-18T00:00:00.000' AS DateTime), CAST(N'2022-06-28T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-21T00:11:46.067' AS DateTime), CAST(N'2021-09-21T00:11:46.067' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[EMPLOYEE] OFF
GO
SET IDENTITY_INSERT [dbo].[PARTNER] ON 
GO
INSERT [dbo].[PARTNER] ([PK_PARTNERID], [FK_COMPANYID], [PAR_NAME], [PAR_MOBILE], [PAR_PASSPORT_EXP], [PAR_INSURANCE_EXP], [PAR_VISA_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (11, 14, N'Satish Kumar Sharma', N'0521767166', CAST(N'2021-07-30T00:00:00.000' AS DateTime), CAST(N'2022-02-07T00:00:00.000' AS DateTime), CAST(N'2023-11-08T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T06:54:38.720' AS DateTime), CAST(N'2021-09-19T06:54:38.720' AS DateTime))
GO
INSERT [dbo].[PARTNER] ([PK_PARTNERID], [FK_COMPANYID], [PAR_NAME], [PAR_MOBILE], [PAR_PASSPORT_EXP], [PAR_INSURANCE_EXP], [PAR_VISA_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (12, 15, N'Satish Kumar Sharma', N'0521767166', CAST(N'2021-07-30T00:00:00.000' AS DateTime), CAST(N'2022-07-02T00:00:00.000' AS DateTime), CAST(N'2026-02-08T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T22:23:23.547' AS DateTime), CAST(N'2021-09-20T00:22:36.480' AS DateTime))
GO
INSERT [dbo].[PARTNER] ([PK_PARTNERID], [FK_COMPANYID], [PAR_NAME], [PAR_MOBILE], [PAR_PASSPORT_EXP], [PAR_INSURANCE_EXP], [PAR_VISA_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (13, 14, N'Shresht Sharma ', N'0521767166', CAST(N'2028-03-07T00:00:00.000' AS DateTime), CAST(N'2022-02-07T00:00:00.000' AS DateTime), CAST(N'2024-01-25T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-19T22:31:16.050' AS DateTime), CAST(N'2021-09-19T22:31:16.050' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[PARTNER] OFF
GO
SET IDENTITY_INSERT [dbo].[PARTNER_FAMILY] ON 
GO
INSERT [dbo].[PARTNER_FAMILY] ([PK_FAMILYID], [FK_PARTNERID], [FML_NAME], [FML_RELATION], [FML_PASSPORT_EXP], [FML_INSURANCE_EXP], [FML_VISA_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (1, 11, N'Saisha', N'Daughter ', CAST(N'2023-07-07T00:00:00.000' AS DateTime), CAST(N'2022-02-07T00:00:00.000' AS DateTime), CAST(N'2024-07-24T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-20T00:08:55.990' AS DateTime), CAST(N'2021-09-20T00:08:55.990' AS DateTime))
GO
INSERT [dbo].[PARTNER_FAMILY] ([PK_FAMILYID], [FK_PARTNERID], [FML_NAME], [FML_RELATION], [FML_PASSPORT_EXP], [FML_INSURANCE_EXP], [FML_VISA_EXP], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (2, 13, N'Sheyan ', N'Son', CAST(N'2026-02-08T00:00:00.000' AS DateTime), CAST(N'2022-02-07T00:00:00.000' AS DateTime), CAST(N'2022-04-08T00:00:00.000' AS DateTime), N'', 1, 0, 3, 3, CAST(N'2021-09-20T00:24:47.230' AS DateTime), CAST(N'2021-09-20T00:24:47.230' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[PARTNER_FAMILY] OFF
GO
SET IDENTITY_INSERT [dbo].[PARTNER_MISC] ON 
GO
INSERT [dbo].[PARTNER_MISC] ([PK_MISCID], [MISC_NAME], [MISC_EXP_DATE], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [FK_COMPANYID]) VALUES (1, N'Range Rover / Mulkiya', CAST(N'2021-10-23T00:00:00.000' AS DateTime), N'Mulkiya ', 1, 0, 3, 3, CAST(N'2021-09-20T23:02:27.157' AS DateTime), CAST(N'2021-09-21T00:00:14.037' AS DateTime), 14)
GO
INSERT [dbo].[PARTNER_MISC] ([PK_MISCID], [MISC_NAME], [MISC_EXP_DATE], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [FK_COMPANYID]) VALUES (2, N'Ford Exepdition / Mulkiya', CAST(N'2022-07-28T00:00:00.000' AS DateTime), N'Mulkiya ', 1, 0, 3, 3, CAST(N'2021-09-20T23:02:31.187' AS DateTime), CAST(N'2021-09-20T23:59:56.913' AS DateTime), 14)
GO
INSERT [dbo].[PARTNER_MISC] ([PK_MISCID], [MISC_NAME], [MISC_EXP_DATE], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [FK_COMPANYID]) VALUES (3, N'BMW 740 LI / Mulkiya', CAST(N'2021-07-20T00:00:00.000' AS DateTime), N'Mulkiya', 1, 0, 3, 3, CAST(N'2021-09-20T23:03:18.437' AS DateTime), CAST(N'2021-09-20T23:59:39.523' AS DateTime), 14)
GO
INSERT [dbo].[PARTNER_MISC] ([PK_MISCID], [MISC_NAME], [MISC_EXP_DATE], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [FK_COMPANYID]) VALUES (4, N'Hundai l10 / Mulkiya', CAST(N'2022-04-06T00:00:00.000' AS DateTime), N'Mulkiya', 1, 0, 3, 3, CAST(N'2021-09-21T00:14:16.213' AS DateTime), CAST(N'2021-09-21T00:14:16.213' AS DateTime), 14)
GO
INSERT [dbo].[PARTNER_MISC] ([PK_MISCID], [MISC_NAME], [MISC_EXP_DATE], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE], [FK_COMPANYID]) VALUES (5, N'Mercedes C-200 /Mulkiya ', CAST(N'2022-02-21T00:00:00.000' AS DateTime), N'Mulkiya', 1, 0, 3, 3, CAST(N'2021-09-21T01:05:42.823' AS DateTime), CAST(N'2021-09-21T01:05:42.823' AS DateTime), 14)
GO
SET IDENTITY_INSERT [dbo].[PARTNER_MISC] OFF
GO
SET IDENTITY_INSERT [dbo].[USERS] ON 
GO
INSERT [dbo].[USERS] ([PK_USERID], [USERNAME], [PASSWORD], [NAME], [MOBILE_NO], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (2, N'3S.User', N'123', N'3S User', N'000000000', N'This is dummy user', 1, 0, NULL, NULL, CAST(N'2021-08-20T00:00:00.000' AS DateTime), CAST(N'2021-08-20T00:00:00.000' AS DateTime))
GO
INSERT [dbo].[USERS] ([PK_USERID], [USERNAME], [PASSWORD], [NAME], [MOBILE_NO], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (3, N'CMS.User', N'CMS@1234', N'CMS', N'6516156156', N'', 1, 0, NULL, 2, CAST(N'2021-08-30T14:57:30.757' AS DateTime), CAST(N'2021-09-19T15:56:23.627' AS DateTime))
GO
INSERT [dbo].[USERS] ([PK_USERID], [USERNAME], [PASSWORD], [NAME], [MOBILE_NO], [NOTES], [IS_ACTIVE], [IS_DELETED], [FK_CREATED_BY], [FK_MODIFIED_BY], [CREATED_DATE], [MODIFIED_DATE]) VALUES (5, N'Test.Login', N'123', N'Test', N'4165116', N'This is test login details', 1, 0, 2, 2, CAST(N'2021-09-19T15:56:13.490' AS DateTime), CAST(N'2021-09-19T15:56:13.490' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[USERS] OFF
GO
ALTER TABLE [dbo].[COMPANY] ADD  CONSTRAINT [DF_COMPANY_IS_ACTIVE]  DEFAULT ((1)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[COMPANY] ADD  CONSTRAINT [DF_COMPANY_IS_DELETED]  DEFAULT ((0)) FOR [IS_DELETED]
GO
ALTER TABLE [dbo].[COMPANY] ADD  CONSTRAINT [DF_COMPANY_CREATED_DATE]  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[COMPANY] ADD  CONSTRAINT [DF_COMPANY_MODIFIED_DATE]  DEFAULT (getdate()) FOR [MODIFIED_DATE]
GO
ALTER TABLE [dbo].[EMPLOYEE] ADD  CONSTRAINT [DF_EMPLOYEE_IS_ACTIVE]  DEFAULT ((1)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[EMPLOYEE] ADD  CONSTRAINT [DF_EMPLOYEE_IS_DELETED]  DEFAULT ((0)) FOR [IS_DELETED]
GO
ALTER TABLE [dbo].[EMPLOYEE] ADD  CONSTRAINT [DF_EMPLOYEE_CREATED_DATE]  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[EMPLOYEE] ADD  CONSTRAINT [DF_EMPLOYEE_MODIFIED_DATE]  DEFAULT (getdate()) FOR [MODIFIED_DATE]
GO
ALTER TABLE [dbo].[PARTNER] ADD  CONSTRAINT [DF_PARTNER_IS_ACTIVE]  DEFAULT ((1)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[PARTNER] ADD  CONSTRAINT [DF_PARTNER_IS_DELETED]  DEFAULT ((0)) FOR [IS_DELETED]
GO
ALTER TABLE [dbo].[PARTNER] ADD  CONSTRAINT [DF_PARTNER_CREATED_DATE]  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[PARTNER] ADD  CONSTRAINT [DF_PARTNER_MODIFIED_DATE]  DEFAULT (getdate()) FOR [MODIFIED_DATE]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] ADD  CONSTRAINT [DF_PARTNER_FAMILY_IS_ACTIVE]  DEFAULT ((1)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] ADD  CONSTRAINT [DF_PARTNER_FAMILY_IS_DELETED]  DEFAULT ((0)) FOR [IS_DELETED]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] ADD  CONSTRAINT [DF_PARTNER_FAMILY_CREATED_DATE]  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] ADD  CONSTRAINT [DF_PARTNER_FAMILY_MODIFIED_DATE]  DEFAULT (getdate()) FOR [MODIFIED_DATE]
GO
ALTER TABLE [dbo].[PARTNER_MISC] ADD  CONSTRAINT [DF_PARTNER_MISC_IS_ACTIVE]  DEFAULT ((1)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[PARTNER_MISC] ADD  CONSTRAINT [DF_PARTNER_MISC_IS_DELETED]  DEFAULT ((0)) FOR [IS_DELETED]
GO
ALTER TABLE [dbo].[PARTNER_MISC] ADD  CONSTRAINT [DF_PARTNER_MISC_CREATED_DATE]  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[PARTNER_MISC] ADD  CONSTRAINT [DF_PARTNER_MISC_MODIFIED_DATE]  DEFAULT (getdate()) FOR [MODIFIED_DATE]
GO
ALTER TABLE [dbo].[USERS] ADD  CONSTRAINT [DF_USERS_IS_ACTIVE]  DEFAULT ((1)) FOR [IS_ACTIVE]
GO
ALTER TABLE [dbo].[USERS] ADD  CONSTRAINT [DF_USERS_IS_DELETED]  DEFAULT ((0)) FOR [IS_DELETED]
GO
ALTER TABLE [dbo].[USERS] ADD  CONSTRAINT [DF_USERS_CREATED_DATE]  DEFAULT (getdate()) FOR [CREATED_DATE]
GO
ALTER TABLE [dbo].[USERS] ADD  CONSTRAINT [DF_USERS_MODIFIED_DATE]  DEFAULT (getdate()) FOR [MODIFIED_DATE]
GO
ALTER TABLE [dbo].[COMPANY]  WITH CHECK ADD  CONSTRAINT [FK_COMPANY_USERS_CREATEDBY] FOREIGN KEY([FK_CREATED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[COMPANY] CHECK CONSTRAINT [FK_COMPANY_USERS_CREATEDBY]
GO
ALTER TABLE [dbo].[COMPANY]  WITH CHECK ADD  CONSTRAINT [FK_COMPANY_USERS_MODIFIEDBY] FOREIGN KEY([FK_MODIFIED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[COMPANY] CHECK CONSTRAINT [FK_COMPANY_USERS_MODIFIEDBY]
GO
ALTER TABLE [dbo].[EMPLOYEE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_COMPANY] FOREIGN KEY([FK_COMPANYID])
REFERENCES [dbo].[COMPANY] ([PK_COMPANYID])
GO
ALTER TABLE [dbo].[EMPLOYEE] CHECK CONSTRAINT [FK_EMPLOYEE_COMPANY]
GO
ALTER TABLE [dbo].[EMPLOYEE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_USERS_CREATEDBY] FOREIGN KEY([FK_CREATED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[EMPLOYEE] CHECK CONSTRAINT [FK_EMPLOYEE_USERS_CREATEDBY]
GO
ALTER TABLE [dbo].[EMPLOYEE]  WITH CHECK ADD  CONSTRAINT [FK_EMPLOYEE_USERS_MODIFIEDBY] FOREIGN KEY([FK_MODIFIED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[EMPLOYEE] CHECK CONSTRAINT [FK_EMPLOYEE_USERS_MODIFIEDBY]
GO
ALTER TABLE [dbo].[PARTNER]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_COMPANY] FOREIGN KEY([FK_COMPANYID])
REFERENCES [dbo].[COMPANY] ([PK_COMPANYID])
GO
ALTER TABLE [dbo].[PARTNER] CHECK CONSTRAINT [FK_PARTNER_COMPANY]
GO
ALTER TABLE [dbo].[PARTNER]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_USERS_CREATEDBY] FOREIGN KEY([FK_CREATED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[PARTNER] CHECK CONSTRAINT [FK_PARTNER_USERS_CREATEDBY]
GO
ALTER TABLE [dbo].[PARTNER]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_USERS_MODIFIEDBY] FOREIGN KEY([FK_MODIFIED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[PARTNER] CHECK CONSTRAINT [FK_PARTNER_USERS_MODIFIEDBY]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_FAMILY_PARTNER] FOREIGN KEY([FK_PARTNERID])
REFERENCES [dbo].[PARTNER] ([PK_PARTNERID])
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] CHECK CONSTRAINT [FK_PARTNER_FAMILY_PARTNER]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_FAMILY_USERS_CREATEDBY] FOREIGN KEY([FK_CREATED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] CHECK CONSTRAINT [FK_PARTNER_FAMILY_USERS_CREATEDBY]
GO
ALTER TABLE [dbo].[PARTNER_FAMILY]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_FAMILY_USERS_MODIFIEDBY] FOREIGN KEY([FK_MODIFIED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[PARTNER_FAMILY] CHECK CONSTRAINT [FK_PARTNER_FAMILY_USERS_MODIFIEDBY]
GO
ALTER TABLE [dbo].[PARTNER_MISC]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_MISC_COMPANY] FOREIGN KEY([FK_COMPANYID])
REFERENCES [dbo].[COMPANY] ([PK_COMPANYID])
GO
ALTER TABLE [dbo].[PARTNER_MISC] CHECK CONSTRAINT [FK_PARTNER_MISC_COMPANY]
GO
ALTER TABLE [dbo].[PARTNER_MISC]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_MISC_USERS_CREATEDBY] FOREIGN KEY([FK_CREATED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[PARTNER_MISC] CHECK CONSTRAINT [FK_PARTNER_MISC_USERS_CREATEDBY]
GO
ALTER TABLE [dbo].[PARTNER_MISC]  WITH CHECK ADD  CONSTRAINT [FK_PARTNER_MISC_USERS_MODIFIEDBY] FOREIGN KEY([FK_MODIFIED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[PARTNER_MISC] CHECK CONSTRAINT [FK_PARTNER_MISC_USERS_MODIFIEDBY]
GO
ALTER TABLE [dbo].[USERS]  WITH CHECK ADD  CONSTRAINT [FK_USERS_USERS_CREATEDBY] FOREIGN KEY([FK_CREATED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[USERS] CHECK CONSTRAINT [FK_USERS_USERS_CREATEDBY]
GO
ALTER TABLE [dbo].[USERS]  WITH CHECK ADD  CONSTRAINT [FK_USERS_USERS_MODIFIEDBY] FOREIGN KEY([FK_MODIFIED_BY])
REFERENCES [dbo].[USERS] ([PK_USERID])
GO
ALTER TABLE [dbo].[USERS] CHECK CONSTRAINT [FK_USERS_USERS_MODIFIEDBY]
GO
/****** Object:  StoredProcedure [dbo].[GetLoginDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[GetLoginDetails] 
	-- Add the parameters for the stored procedure here
	@UserName varchar(200),
	@PassWord varchar(200)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT USERNAME,PASSWORD from USERS where LOWER(USERNAME) = LOWER(@UserName) AND LOWER(PASSWORD) = LOWER(@PassWord);
	RETURN
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetCompanyAlert]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetCompanyAlert] --'2021-08-26','2022-08-21'
	@FromDate DATETIME= NULL,
	@ToDate DATETIME= NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Insert statements for procedure here	
	DECLARE @Search NVARCHAR(MAX)	
	SET @Search= 'SELECT distinct [PK_COMPANYID]
      ,[COMP_NAME]
      ,[COMP_ADDRESS]
      ,[COMP_PHONE]
      ,[COMP_TRADE_LICENSE_EXP]
      ,[COMP_IMMIGRATION_EXP]
      ,[COMP_IMPORT_CODE_EXP]
      ,[COMP_INSURANCE_EXP]
      ,[NOTES]
	  ,[COMP_EMAIL]
      ,[COMP_CONTACT_PERSON]
      ,[COMP_CP_PHONE]
	FROM COMPANY
	
	WHERE IS_ACTIVE=1 AND IS_DELETED=0'

	IF(ISNULL(CAST(@FromDate AS NVARCHAR(50)),'')<>'' AND ISNULL(CAST(@ToDate AS NVARCHAR(50)),'')<>'')
		BEGIN
		SET	@Search=@Search 
		+ ' AND
			((
			CAST(COMP_IMMIGRATION_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(COMP_IMMIGRATION_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			 OR
			(
			CAST(COMP_TRADE_LICENSE_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(COMP_TRADE_LICENSE_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + ''' 
			)
			OR
			(
			CAST(COMP_IMPORT_CODE_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(COMP_IMPORT_CODE_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			OR
			(
			CAST(COMP_INSURANCE_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(COMP_INSURANCE_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			))
			';	
	END	
	  


	PRINT @Search
	EXEC Sp_executesql @Search
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetCompanyDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetCompanyDetails]
	@CompanyID bigint = NULL
AS
BEGIN
	-- SET NOCOUNT ON added		to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
    -- Insert statements for procedure here
	IF @CompanyID IS NOT NULL
	BEGIN
		SELECT * from COMPANY WHERE PK_COMPANYID = @CompanyID;
	END;
	ELSE
	BEGIN
		SELECT * from COMPANY 
	END;
	RETURN;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetEmployeeAlert]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetEmployeeAlert] --'2021-08-26','2022-08-21'
	@FromDate DATETIME= NULL,
	@ToDate DATETIME= NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Insert statements for procedure here	
	DECLARE @Search NVARCHAR(MAX)	
	SET @Search= 'SELECT distinct E.PK_EMPLOYEEID
	   ,C.PK_COMPANYID
      ,C.COMP_NAME
      ,C.COMP_ADDRESS
      ,C.COMP_PHONE
	  ,E.EMP_NAME
      ,E.EMP_MOBILE
      ,E.EMP_PASSPORT_EXP
      ,E.EMP_INSURANCE_EXP
      ,E.EMP_VISA_EXP
      ,E.EMP_LABOR_CARD_EXP
      ,E.NOTES
	  ,C.COMP_EMAIL
      ,C.COMP_CONTACT_PERSON
      ,C.COMP_CP_PHONE
	FROM EMPLOYEE E INNER JOIN COMPANY C ON E.FK_COMPANYID = C.PK_COMPANYID 
	
	WHERE E.IS_ACTIVE=1 AND E.IS_DELETED=0 AND C.IS_ACTIVE=1 AND C.IS_DELETED=0'

	IF(ISNULL(CAST(@FromDate AS NVARCHAR(50)),'')<>'' AND ISNULL(CAST(@ToDate AS NVARCHAR(50)),'')<>'')
		BEGIN
		SET	@Search=@Search 
		+ ' AND
			((
			CAST(E.EMP_PASSPORT_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(E.EMP_PASSPORT_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			 OR
			(
			CAST(E.EMP_INSURANCE_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(E.EMP_INSURANCE_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + ''' 
			)
			OR
			(
			CAST(E.EMP_VISA_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(E.EMP_VISA_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			OR
			(
			CAST(E.EMP_LABOR_CARD_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(E.EMP_LABOR_CARD_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			))
			';	
	END	
	  


	PRINT @Search
	EXEC Sp_executesql @Search
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetEmployeeDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetEmployeeDetails]
	@CompanyID bigint = NULL,
	@EmployeeID bigint = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF @CompanyID IS NOT NULL
	BEGIN
		SELECT * from EMPLOYEE WHERE FK_COMPANYID = @CompanyID;
	END;
	ELSE IF @EmployeeID IS NOT NULL
	BEGIN
		SELECT * from EMPLOYEE WHERE PK_EMPLOYEEID = @EmployeeID;
	END;
	ELSE
	BEGIN
		SELECT E.[PK_EMPLOYEEID]
			  ,E.[FK_COMPANYID]
			  ,E.[EMP_NAME]
			  ,E.[EMP_MOBILE]
			  ,E.[EMP_PASSPORT_EXP]
			  ,E.[EMP_INSURANCE_EXP]
			  ,E.[EMP_VISA_EXP]
			  ,E.[EMP_LABOR_CARD_EXP]
			  ,E.[NOTES]
			  ,E.[IS_ACTIVE]
			  ,E.[IS_DELETED]
			  ,E.[FK_CREATED_BY]
			  ,E.[FK_MODIFIED_BY]
			  ,E.[CREATED_DATE]
			  ,E.[MODIFIED_DATE]
			  ,C.COMP_NAME
			  ,C.COMP_ADDRESS
			  ,C.COMP_PHONE
		  FROM [dbo].[EMPLOYEE] E INNER JOIN COMPANY C ON E.FK_COMPANYID = C.PK_COMPANYID

	END;
	RETURN;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetLoginDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetLoginDetails] 
	-- Add the parameters for the stored procedure here
	@UserName varchar(200),
	@PassWord varchar(200)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT * from USERS where LOWER(USERNAME) = LOWER(@UserName) AND LOWER(PASSWORD) = LOWER(@PassWord);
	RETURN
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPartnerAlert]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPartnerAlert] --'2021-08-26','2022-08-21'
	@FromDate DATETIME= NULL,
	@ToDate DATETIME= NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Insert statements for procedure here	
	DECLARE @Search NVARCHAR(MAX)	
	SET @Search= 'SELECT distinct P.PK_PARTNERID
	   ,C.PK_COMPANYID
      ,C.COMP_NAME
      ,C.COMP_ADDRESS
      ,C.COMP_PHONE
	  ,P.PAR_NAME
      ,P.PAR_MOBILE
      ,P.PAR_PASSPORT_EXP
      ,P.PAR_INSURANCE_EXP
      ,P.PAR_VISA_EXP
      ,P.NOTES
	  ,C.COMP_EMAIL
      ,C.COMP_CONTACT_PERSON
      ,C.COMP_CP_PHONE
	FROM PARTNER P INNER JOIN COMPANY C ON P.FK_COMPANYID = C.PK_COMPANYID 
	
	WHERE P.IS_ACTIVE=1 AND P.IS_DELETED=0 AND C.IS_ACTIVE=1 AND C.IS_DELETED=0'

	IF(ISNULL(CAST(@FromDate AS NVARCHAR(50)),'')<>'' AND ISNULL(CAST(@ToDate AS NVARCHAR(50)),'')<>'')
		BEGIN
		SET	@Search=@Search 
		+ ' AND
			((
			CAST(P.PAR_PASSPORT_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(P.PAR_PASSPORT_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			 OR
			(
			CAST(P.PAR_INSURANCE_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(P.PAR_INSURANCE_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + ''' 
			)
			OR
			(
			CAST(P.PAR_VISA_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(P.PAR_VISA_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			)
			';	
	END	
	  


	PRINT @Search
	EXEC Sp_executesql @Search
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPartnerDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPartnerDetails]
	@CompanyID bigint = NULL,
	@PartnerID bigint = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
    -- Insert statements for procedure here
	IF @CompanyID IS NOT NULL
	BEGIN
		SELECT * from [PARTNER] WHERE FK_COMPANYID = @CompanyID;
	END;
	ELSE IF @PartnerID IS NOT NULL
	BEGIN
		SELECT * from [PARTNER] WHERE PK_PARTNERID = @PartnerID;
	END;
	ELSE
	BEGIN
		SELECT P.[PK_PARTNERID]
				  ,P.[FK_COMPANYID]
				  ,P.[PAR_NAME]
				  ,P.[PAR_MOBILE]
				  ,P.[PAR_PASSPORT_EXP]
				  ,P.[PAR_INSURANCE_EXP]
				  ,P.[PAR_VISA_EXP]
				  ,P.[NOTES]
				  ,P.[IS_ACTIVE]
				  ,P.[IS_DELETED]
				  ,P.[FK_CREATED_BY]
				  ,P.[FK_MODIFIED_BY]
				  ,P.[CREATED_DATE]
				  ,P.[MODIFIED_DATE]
				  ,C.COMP_NAME
				  ,C.COMP_ADDRESS
				  ,c.COMP_PHONE
			  FROM [dbo].[PARTNER] P INNER JOIN COMPANY C ON P.FK_COMPANYID = C.PK_COMPANYID

	END;
	RETURN;

END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPartnerFamilyAlert]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPartnerFamilyAlert] --'2021-08-26','2022-08-21'
	@FromDate DATETIME= NULL,
	@ToDate DATETIME= NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Insert statements for procedure here	
	DECLARE @Search NVARCHAR(MAX)	
	SET @Search= 'SELECT distinct PF.PK_FAMILYID
	   ,C.PK_COMPANYID
      ,C.COMP_NAME
      ,C.COMP_ADDRESS
      ,C.COMP_PHONE
	  ,P.PK_PARTNERID
	  ,P.PAR_NAME
	  ,P.PAR_MOBILE
	  ,PF.FML_NAME
      ,PF.FML_RELATION
      ,PF.FML_PASSPORT_EXP
      ,PF.FML_INSURANCE_EXP
      ,PF.FML_VISA_EXP
      ,PF.NOTES
	  ,C.COMP_EMAIL
      ,C.COMP_CONTACT_PERSON
      ,C.COMP_CP_PHONE
	FROM PARTNER_FAMILY PF INNER JOIN PARTNER P ON P.PK_PARTNERID = PF.FK_PARTNERID
	INNER JOIN COMPANY C ON P.FK_COMPANYID = C.PK_COMPANYID 	
	WHERE PF.IS_ACTIVE=1 AND P.IS_DELETED=0 AND C.IS_ACTIVE=1 AND C.IS_DELETED=0'

	IF(ISNULL(CAST(@FromDate AS NVARCHAR(50)),'')<>'' AND ISNULL(CAST(@ToDate AS NVARCHAR(50)),'')<>'')
		BEGIN
		SET	@Search=@Search 
		+ ' AND
			((
			CAST(PF.FML_PASSPORT_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(PF.FML_PASSPORT_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			 OR
			(
			CAST(PF.FML_INSURANCE_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(PF.FML_INSURANCE_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + ''' 
			)
			OR
			(
			CAST(PF.FML_VISA_EXP AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(PF.FML_VISA_EXP AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			)
			';	
	END	
	  


	PRINT @Search
	EXEC Sp_executesql @Search
END

------------------------------------------------------------


/****** Object:  StoredProcedure [dbo].[SP_GetPartnerMiscAlert]    Script Date: 18-Sep-21 4:57:16 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPartnerFamilyDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPartnerFamilyDetails]
	@CompanyID bigint = NULL,
	@PartnerFamilyID bigint = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF @CompanyID IS NOT NULL
	BEGIN
		SELECT PF.[PK_FAMILYID]
			  ,PF.[FK_PARTNERID]
			  ,PF.[FML_NAME]
			  ,PF.[FML_RELATION]
			  ,PF.[FML_PASSPORT_EXP]
			  ,PF.[FML_INSURANCE_EXP]
			  ,PF.[FML_VISA_EXP]
			  ,PF.[NOTES]
			  ,PF.[IS_ACTIVE]
			  ,PF.[IS_DELETED]
			  ,PF.[FK_CREATED_BY]
			  ,PF.[FK_MODIFIED_BY]
			  ,PF.[CREATED_DATE]
			  ,PF.[MODIFIED_DATE]
			  ,P.PAR_NAME
			  ,P.PAR_MOBILE
		  FROM [dbo].[PARTNER_FAMILY] PF INNER JOIN [dbo].[PARTNER] P ON PF.FK_PARTNERID = P.PK_PARTNERID
		 WHERE P.FK_COMPANYID = @CompanyID;
	END;
	ELSE IF @PartnerFamilyID IS NOT NULL
	BEGIN
		SELECT PF.[PK_FAMILYID]
			  ,PF.[FK_PARTNERID]
			  ,PF.[FML_NAME]
			  ,PF.[FML_RELATION]
			  ,PF.[FML_PASSPORT_EXP]
			  ,PF.[FML_INSURANCE_EXP]
			  ,PF.[FML_VISA_EXP]
			  ,PF.[NOTES]
			  ,PF.[IS_ACTIVE]
			  ,PF.[IS_DELETED]
			  ,PF.[FK_CREATED_BY]
			  ,PF.[FK_MODIFIED_BY]
			  ,PF.[CREATED_DATE]
			  ,PF.[MODIFIED_DATE]
			  ,P.PAR_NAME
			  ,P.PAR_MOBILE
		  FROM [dbo].[PARTNER_FAMILY] PF INNER JOIN [dbo].[PARTNER] P ON PF.FK_PARTNERID = P.PK_PARTNERID
		 WHERE PF.PK_FAMILYID = @PartnerFamilyID;
	END;
	ELSE
	BEGIN
		SELECT PF.[PK_FAMILYID]
			  ,PF.[FK_PARTNERID]
			  ,PF.[FML_NAME]
			  ,PF.[FML_RELATION]
			  ,PF.[FML_PASSPORT_EXP]
			  ,PF.[FML_INSURANCE_EXP]
			  ,PF.[FML_VISA_EXP]
			  ,PF.[NOTES]
			  ,PF.[IS_ACTIVE]
			  ,PF.[IS_DELETED]
			  ,PF.[FK_CREATED_BY]
			  ,PF.[FK_MODIFIED_BY]
			  ,PF.[CREATED_DATE]
			  ,PF.[MODIFIED_DATE]
			  ,P.PAR_NAME
			  ,P.PAR_MOBILE
			  ,C.COMP_NAME
			  ,C.COMP_ADDRESS
			  ,C.COMP_PHONE
		  FROM [dbo].[PARTNER_FAMILY] PF INNER JOIN [dbo].[PARTNER] P ON PF.FK_PARTNERID = P.PK_PARTNERID
		   INNER JOIN [dbo].COMPANY C ON P.FK_COMPANYID = C.PK_COMPANYID


	END;
	RETURN;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPartnerMiscAlert]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPartnerMiscAlert] --'2021-08-26','2022-08-21'
	@FromDate DATETIME= NULL,
	@ToDate DATETIME= NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	-- Insert statements for procedure here	
	DECLARE @Search NVARCHAR(MAX)	
	SET @Search= 'SELECT PM.PK_MISCID
      ,PM.FK_COMPANYID
      ,PM.MISC_NAME
      ,PM.MISC_EXP_DATE
      ,PM.NOTES
	  ,C.PK_COMPANYID
      ,C.COMP_NAME
      ,C.COMP_ADDRESS
      ,C.COMP_PHONE
	  ,C.COMP_EMAIL
      ,C.COMP_CONTACT_PERSON
      ,C.COMP_CP_PHONE
  FROM PARTNER_MISC PM 
  inner JOIN COMPANY C ON PM.FK_COMPANYID = C.PK_COMPANYID
  WHERE PM.IS_ACTIVE=1 AND PM.IS_DELETED=0 AND C.IS_ACTIVE=1 AND C.IS_DELETED=0'

	IF(ISNULL(CAST(@FromDate AS NVARCHAR(50)),'')<>'' AND ISNULL(CAST(@ToDate AS NVARCHAR(50)),'')<>'')
		BEGIN
		SET	@Search=@Search 
		+ ' AND
			((
			CAST(PM.MISC_EXP_DATE AS DATE) >= ''' +  CAST(@FromDate AS NVARCHAR(50))  + ''' AND CAST(PM.MISC_EXP_DATE AS DATE) <= ''' +  CAST(@ToDate AS NVARCHAR(50)) + '''
			)
			 
			)
			';	
	END	
	  	  
	PRINT @Search
	EXEC Sp_executesql @Search
END


------------------------------
GO
/****** Object:  StoredProcedure [dbo].[SP_GetPartnerMiscDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetPartnerMiscDetails] 
	@CompanyID bigint = NULL,
	@PartnerMiscID bigint = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	IF @CompanyID IS NOT NULL
	BEGIN
		SELECT PM.[PK_MISCID]
			  ,PM.[FK_COMPANYID]
			  ,PM.[MISC_NAME]
			  ,PM.[MISC_EXP_DATE]
			  ,PM.[NOTES]
			  ,PM.[IS_ACTIVE]
			  ,PM.[IS_DELETED]
			  ,PM.[FK_CREATED_BY]
			  ,PM.[FK_MODIFIED_BY]
			  ,PM.[CREATED_DATE]
			  ,PM.[MODIFIED_DATE]
		  FROM [dbo].[PARTNER_MISC] PM 
		  WHERE PM.FK_COMPANYID = @CompanyID;
	END;
	ELSE IF @PartnerMiscID IS NOT NULL
	BEGIN
		SELECT PM.[PK_MISCID]
			  ,PM.[FK_COMPANYID]
			  ,PM.[MISC_NAME]
			  ,PM.[MISC_EXP_DATE]
			  ,PM.[NOTES]
			  ,PM.[IS_ACTIVE]
			  ,PM.[IS_DELETED]
			  ,PM.[FK_CREATED_BY]
			  ,PM.[FK_MODIFIED_BY]
			  ,PM.[CREATED_DATE]
			  ,PM.[MODIFIED_DATE]
		  FROM [dbo].[PARTNER_MISC] PM 
		  WHERE PM.PK_MISCID = @PartnerMiscID;
	END;
	ELSE
	BEGIN
		SELECT PM.[PK_MISCID]
			  ,PM.[FK_COMPANYID]
			  ,PM.[MISC_NAME]
			  ,PM.[MISC_EXP_DATE]
			  ,PM.[NOTES]
			  ,PM.[IS_ACTIVE]
			  ,PM.[IS_DELETED]
			  ,PM.[FK_CREATED_BY]
			  ,PM.[FK_MODIFIED_BY]
			  ,PM.[CREATED_DATE]
			  ,PM.[MODIFIED_DATE]
			  ,C.COMP_NAME
			  ,C.COMP_ADDRESS
			  ,C.COMP_PHONE
		  FROM [dbo].[PARTNER_MISC] PM INNER JOIN  [dbo].COMPANY C ON PM.FK_COMPANYID = C.PK_COMPANYID


	END;
	RETURN;
END


-------------------------------------------

/****** Object:  StoredProcedure [dbo].[SP_GetPartnerMiscAlert]    Script Date: 20-Sep-21 2:05:41 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[SP_GetUserDetails]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_GetUserDetails]
	@UserID bigint = NULL
AS
BEGIN
	-- SET NOCOUNT ON added		to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
    -- Insert statements for procedure here
	IF @UserID IS NOT NULL
	BEGIN
		SELECT * from USERS WHERE PK_USERID = @UserID AND IS_DELETED = 0;
	END;
	ELSE
	BEGIN
		SELECT * from USERS WHERE IS_DELETED = 0;
	END;
	RETURN;
END
GO
/****** Object:  StoredProcedure [dbo].[SP_UPSERTCompany]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_UPSERTCompany]
	-- Add the parameters for the stored procedure here
	@CompanyID bigint,
	@CompanyName nvarchar(200),
	@CompanyAddress nvarchar(500),
	@CompanyPhone nvarchar(50),
	@CompanyTradeLicenceExp datetime = null,
	@CompanyImmigrationExp datetime = null,
	@CompanyImportCodeExp datetime = null,
	@CompanyInsuranceExp datetime = null,
	@Notes nvarchar(max),
	@IsActive bit,
	@IsDeleted bit,
	@CreatedBy bigint,
	@ModifiedBy bigint,
	@CreatedDate datetime,
	@ModifiedDate datetime,
	@CompanyEmail nvarchar(50),
	@CompanyContactPerson nvarchar(50),
	@CompanyContactPersonPhone  nvarchar(50),
	@ModeOfOpertion nvarchar(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
	IF LOWER(@ModeOfOpertion) = 'add'
		BEGIN TRY   
			INSERT INTO [dbo].[COMPANY]
				   ([COMP_NAME],[COMP_ADDRESS]
				   ,[COMP_PHONE]
				   ,[COMP_TRADE_LICENSE_EXP]
				   ,[COMP_IMMIGRATION_EXP]
				   ,[COMP_IMPORT_CODE_EXP]
				   ,[COMP_INSURANCE_EXP]
				   ,[NOTES]
				   ,[IS_ACTIVE]
				   ,[IS_DELETED]
				   ,[FK_CREATED_BY]
				   ,[FK_MODIFIED_BY]
				   ,[CREATED_DATE]
				   ,[MODIFIED_DATE]
				   ,[COMP_EMAIL]
				   ,[COMP_CONTACT_PERSON]
				   ,[COMP_CP_PHONE])
			 VALUES(
						@CompanyName,
						@CompanyAddress,
						@CompanyPhone,
						@CompanyTradeLicenceExp,
						@CompanyImmigrationExp,
						@CompanyImportCodeExp,
						@CompanyInsuranceExp,
						@Notes,
						@IsActive,
						@IsDeleted,
						@CreatedBy,
						@ModifiedBy,
						@CreatedDate,
						@ModifiedDate,
						@CompanyEmail,
						@CompanyContactPerson,
						@CompanyContactPersonPhone);
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			RETURN 0;
		END CATCH
	ELSE
		BEGIN TRY
			UPDATE  [dbo].[COMPANY] SET
			 [COMP_NAME]=@CompanyName         
			,[COMP_ADDRESS]=@CompanyAddress           
			,[COMP_PHONE]=@CompanyPhone            
			,[COMP_TRADE_LICENSE_EXP]=@CompanyTradeLicenceExp 
			,[COMP_IMMIGRATION_EXP]=@CompanyImmigrationExp   
			,[COMP_IMPORT_CODE_EXP]=@CompanyImportCodeExp   
			,[COMP_INSURANCE_EXP]=@CompanyInsuranceExp     
			,[NOTES]=@Notes                  
			,[IS_ACTIVE]=@IsActive              
			,[IS_DELETED]=@IsDeleted			        
			,[FK_MODIFIED_BY]=@ModifiedBy			          
			,[MODIFIED_DATE]=@ModifiedDate
			,[COMP_EMAIL] = @CompanyEmail
			,[COMP_CONTACT_PERSON] = @CompanyContactPerson
			,[COMP_CP_PHONE] = @CompanyContactPersonPhone
			WHERE PK_COMPANYID = @CompanyID;
				--RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			RETURN 0;
		END CATCH
END

GO
/****** Object:  StoredProcedure [dbo].[SP_UPSERTEmployee]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_UPSERTEmployee] 
	-- Add the parameters for the stored procedure here
	@EmployeeID bigint,
	@CompanyID bigint,
	@EmployeeName nvarchar(200),
	@EmployeeMobile nvarchar(50),
	@EmployeePassportExp datetime = null,
	@EmployeeInsuranceExp datetime = null,
	@EmployeeVisaExp datetime = null,
	@EmployeeLaborCardExp datetime = null,
	@Notes nvarchar(max),
	@IsActive bit,
	@IsDeleted bit,
	@CreatedBy bigint,
	@ModifiedBy bigint,
	@CreatedDate datetime,
	@ModifiedDate datetime,
	@ModeOfOpertion nvarchar(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	 SET NOCOUNT OFF;

    IF LOWER(@ModeOfOpertion) = 'add'
		BEGIN TRY   
			INSERT INTO [dbo].[EMPLOYEE]
					   ([FK_COMPANYID]
					   ,[EMP_NAME]
					   ,[EMP_MOBILE]
					   ,[EMP_PASSPORT_EXP]
					   ,[EMP_INSURANCE_EXP]
					   ,[EMP_VISA_EXP]
					   ,[EMP_LABOR_CARD_EXP]
					   ,[NOTES]
					   ,[IS_ACTIVE]
					   ,[IS_DELETED]
					   ,[FK_CREATED_BY]
					   ,[FK_MODIFIED_BY]
					   ,[CREATED_DATE]
					   ,[MODIFIED_DATE])
				 VALUES(
						@CompanyID,
						@EmployeeName,
						@EmployeeMobile,
						@EmployeePassportExp,
						@EmployeeInsuranceExp,
						@EmployeeVisaExp,
						@EmployeeLaborCardExp,
						@Notes,
						@IsActive,
						@IsDeleted,
						@CreatedBy,
						@ModifiedBy,
						@CreatedDate,
						@ModifiedDate);
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			RETURN 0;
		END CATCH
	ELSE
		BEGIN TRY
			UPDATE [dbo].[EMPLOYEE]  SET 
					 [FK_COMPANYID] = @CompanyID
					,[EMP_NAME] = @EmployeeName
					,[EMP_MOBILE] = @EmployeeMobile
					,[EMP_PASSPORT_EXP] = @EmployeePassportExp
					,[EMP_INSURANCE_EXP] = @EmployeeInsuranceExp
					,[EMP_VISA_EXP] = @EmployeeVisaExp
					,[EMP_LABOR_CARD_EXP] = @EmployeeLaborCardExp    
					,[NOTES]=@Notes                  
					,[IS_ACTIVE]=@IsActive              
					,[IS_DELETED]=@IsDeleted			        
					,[FK_MODIFIED_BY]=@ModifiedBy			          
					,[MODIFIED_DATE]=@ModifiedDate
				WHERE PK_EMPLOYEEID = @EmployeeID;
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[SP_UPSERTPartner]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_UPSERTPartner] 
	-- Add the parameters for the stored procedure here
	@PartnerID bigint,
	@CompanyID bigint,
	@PartnerName nvarchar(200),
	@PartnerMobile nvarchar(50),
	@PartnerPassportExp datetime = null,
	@PartnerInsuranceExp datetime = null,
	@PartnerVisaExp datetime = null,
	@Notes nvarchar(max),
	@IsActive bit,
	@IsDeleted bit,
	@CreatedBy bigint,
	@ModifiedBy bigint,
	@CreatedDate datetime,
	@ModifiedDate datetime,
	@ModeOfOpertion nvarchar(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	IF LOWER(@ModeOfOpertion) = 'add'
		BEGIN TRY   
			INSERT INTO [dbo].[PARTNER]
					   ([FK_COMPANYID]
					   ,[PAR_NAME]
					   ,[PAR_MOBILE]
					   ,[PAR_PASSPORT_EXP]
					   ,[PAR_INSURANCE_EXP]
					   ,[PAR_VISA_EXP]
					   ,[NOTES]
					   ,[IS_ACTIVE]
					   ,[IS_DELETED]
					   ,[FK_CREATED_BY]
					   ,[FK_MODIFIED_BY]
					   ,[CREATED_DATE]
					   ,[MODIFIED_DATE])
				 VALUES(
						@CompanyID,
						@PartnerName,
						@PartnerMobile,
						@PartnerPassportExp,
						@PartnerInsuranceExp,
						@PartnerVisaExp,
						@Notes,
						@IsActive,
						@IsDeleted,
						@CreatedBy,
						@ModifiedBy,
						@CreatedDate,
						@ModifiedDate);
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH
	ELSE
		BEGIN TRY
			UPDATE [dbo].[PARTNER]  SET 
					 [FK_COMPANYID] = @CompanyID
					,[PAR_NAME] = @PartnerName
					,[PAR_MOBILE] = @PartnerMobile
					,[PAR_PASSPORT_EXP] = @PartnerPassportExp
					,[PAR_INSURANCE_EXP] = @PartnerInsuranceExp
					,[PAR_VISA_EXP] = @PartnerVisaExp   
					,[NOTES]=@Notes                  
					,[IS_ACTIVE]=@IsActive              
					,[IS_DELETED]=@IsDeleted			        
					,[FK_MODIFIED_BY]=@ModifiedBy			          
					,[MODIFIED_DATE]=@ModifiedDate
				WHERE PK_PARTNERID = @PartnerID;
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH

END
GO
/****** Object:  StoredProcedure [dbo].[SP_UPSERTPartnerFamily]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_UPSERTPartnerFamily] 
	-- Add the parameters for the stored procedure here
	@PartnerFamilyID bigint,
	@PartnerID bigint,
	@PartnerFamilyName nvarchar(200),
	@PartnerFamilyRelation nvarchar(50),
	@PartnerFamilyPassportExp datetime = null,
	@PartnerFamilyInsuranceExp datetime = null,
	@PartnerFamilyVisaExp datetime = null,
	@Notes nvarchar(max),
	@IsActive bit,
	@IsDeleted bit,
	@CreatedBy bigint,
	@ModifiedBy bigint,
	@CreatedDate datetime,
	@ModifiedDate datetime,
	@ModeOfOpertion nvarchar(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	IF LOWER(@ModeOfOpertion) = 'add'
		BEGIN TRY   
			INSERT INTO [dbo].[PARTNER_FAMILY]
					   ([FK_PARTNERID]
					   ,[FML_NAME]
					   ,[FML_RELATION]
					   ,[FML_PASSPORT_EXP]
					   ,[FML_INSURANCE_EXP]
					   ,[FML_VISA_EXP]
					   ,[NOTES]
					   ,[IS_ACTIVE]
					   ,[IS_DELETED]
					   ,[FK_CREATED_BY]
					   ,[FK_MODIFIED_BY]
					   ,[CREATED_DATE]
					   ,[MODIFIED_DATE])
				 VALUES(
						@PartnerID,
						@PartnerFamilyName,
						@PartnerFamilyRelation,
						@PartnerFamilyPassportExp,
						@PartnerFamilyInsuranceExp,
						@PartnerFamilyVisaExp,
						@Notes,
						@IsActive,
						@IsDeleted,
						@CreatedBy,
						@ModifiedBy,
						@CreatedDate,
						@ModifiedDate);
-- 				RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH
	ELSE
		BEGIN TRY
			UPDATE [dbo].[PARTNER_FAMILY] 
				   SET [FK_PARTNERID] = @PartnerID
					  ,[FML_NAME] = @PartnerFamilyName
					  ,[FML_RELATION] = @PartnerFamilyRelation
					  ,[FML_PASSPORT_EXP] = @PartnerFamilyPassportExp
					  ,[FML_INSURANCE_EXP] = @PartnerFamilyInsuranceExp
					  ,[FML_VISA_EXP] = @PartnerFamilyVisaExp
					  ,[NOTES]=@Notes                  
					  ,[IS_ACTIVE]=@IsActive              
					  ,[IS_DELETED]=@IsDeleted			        
					  ,[FK_MODIFIED_BY]=@ModifiedBy			          
					  ,[MODIFIED_DATE]=@ModifiedDate
				 WHERE  PK_FAMILYID = @PartnerFamilyID;
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH

END

--------------------------------


/****** Object:  StoredProcedure [dbo].[SP_UPSERTPartner]    Script Date: 17-Sep-21 12:17:35 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[SP_UPSERTPartnerMisc]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_UPSERTPartnerMisc] 
	-- Add the parameters for the stored procedure here
	@PartnerMiscID bigint,
	@CompanyID bigint,
	@PartnerMiscName nvarchar(200),
	@PartnerMiscExpDate datetime = null,
	@Notes nvarchar(max),
	@IsActive bit,
	@IsDeleted bit,
	@CreatedBy bigint,
	@ModifiedBy bigint,
	@CreatedDate datetime,
	@ModifiedDate datetime,
	@ModeOfOpertion nvarchar(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;

	IF LOWER(@ModeOfOpertion) = 'add'
		BEGIN TRY   
			INSERT INTO [dbo].[PARTNER_MISC]
					   ([FK_COMPANYID]
					   ,[MISC_NAME]
					   ,[MISC_EXP_DATE]
					   ,[NOTES]
					   ,[IS_ACTIVE]
					   ,[IS_DELETED]
					   ,[FK_CREATED_BY]
					   ,[FK_MODIFIED_BY]
					   ,[CREATED_DATE]
					   ,[MODIFIED_DATE])
				 VALUES(
						@CompanyID,
						@PartnerMiscName,
						@PartnerMiscExpDate,
						@Notes,
						@IsActive,
						@IsDeleted,
						@CreatedBy,
						@ModifiedBy,
						@CreatedDate,
						@ModifiedDate);
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			RETURN 0;
		END CATCH
	ELSE
		BEGIN TRY
			UPDATE [dbo].[PARTNER_MISC]
				   SET [FK_COMPANYID] = @CompanyID
					  ,[MISC_NAME] = @PartnerMiscName
					  ,[MISC_EXP_DATE] = @PartnerMiscExpDate
					  ,[NOTES]=@Notes                  
					  ,[IS_ACTIVE]=@IsActive              
					  ,[IS_DELETED]=@IsDeleted			        
					  ,[FK_MODIFIED_BY]=@ModifiedBy			          
					  ,[MODIFIED_DATE]=@ModifiedDate
				 WHERE  PK_MISCID = @PartnerMiscID;
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH

END


-------------------------------------------------


/****** Object:  StoredProcedure [dbo].[SP_GetPartnerMiscDetails]    Script Date: 20-Sep-21 2:05:45 PM ******/
SET ANSI_NULLS ON
GO
/****** Object:  StoredProcedure [dbo].[SP_UPSERTUser]    Script Date: 22-Sep-21 11:27:03 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[SP_UPSERTUser]
	@UserID bigint,
	@UserName nvarchar(200),
	@Password nvarchar(200),
	@Name nvarchar(500),
	@MobileNo nvarchar(50),
	@Notes nvarchar(max),
	@IsActive bit,
	@IsDeleted bit,
	@CreatedBy bigint,
	@ModifiedBy bigint,
	@CreatedDate datetime,
	@ModifiedDate datetime,
	@ModeOfOpertion nvarchar(10)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT OFF;
	IF LOWER(@ModeOfOpertion) = 'add'
		BEGIN TRY   
			INSERT INTO [dbo].[USERS]
           ([USERNAME]
           ,[PASSWORD]
           ,[NAME]
           ,[MOBILE_NO]
           ,[NOTES]
           ,[IS_ACTIVE]
           ,[IS_DELETED]
           ,[FK_CREATED_BY]
           ,[FK_MODIFIED_BY]
           ,[CREATED_DATE]
           ,[MODIFIED_DATE])
     VALUES(
						@UserName,
						@Password,
						@Name,
						@MobileNo,						
						@Notes,
						@IsActive,
						@IsDeleted,
						@CreatedBy,
						@ModifiedBy,
						@CreatedDate,
						@ModifiedDate);
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			RETURN 0;
		END CATCH
	ELSE
		BEGIN TRY
			UPDATE  [dbo].[USERS] SET
			  [USERNAME] = @UserName
			,[PASSWORD] = @Password
			,[NAME] = @Name
			,[MOBILE_NO] = @MobileNo    
			,[NOTES]=@Notes                  
			,[IS_ACTIVE]=@IsActive              
			,[IS_DELETED]=@IsDeleted			        
			,[FK_MODIFIED_BY]=@ModifiedBy			          
			,[MODIFIED_DATE]=@ModifiedDate
			WHERE PK_USERID = @UserID;
				-- RETURN 1;

		END TRY
		BEGIN CATCH
			INSERT INTO [dbo].[DB_Errors] VALUES (SUSER_SNAME(),ERROR_NUMBER(),ERROR_STATE(),ERROR_SEVERITY(),ERROR_LINE(),ERROR_PROCEDURE(),ERROR_MESSAGE(),GETDATE());
			-- RETURN 0;
		END CATCH


END
GO
